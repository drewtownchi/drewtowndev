---
import Card from '@components/Card.vue';
import Layout from '../../layouts/Layout.astro';
export async function getStaticPaths({ paginate }) {
  const allPosts = await Astro.glob('../post/*.md');
  const sortedPosts = allPosts.sort((a, b) => new Date(a.frontmatter.date).getTime() - new Date(b.frontmatter.date).getTime()).reverse();
  // Generate pages from our array of astronauts, with 2 to a page
  return paginate(allPosts, { pageSize: 5 });
}

// All paginated data is passed on the "page" prop
const { page } = Astro.props;
---

<Layout title="Archive">
  <div class="mx-auto max-w-7xl py-6 sm:px-6 lg:px-8 z-50">
    <main class="px-16 py-8">
      <header class="max-w-2xl">
        <h1 class="text-4xl font-bold tracking-tight text-slate-100 sm:text-5xl">A collection of articles and thoughts on software and working in the software industry.</h1>
        <p class="my-6 text-slate-400 sm:text-lg">My ever growing thoughts, research, and tips about all things Vue, Astro, Strapi, TailwindCSS, JavaScript and more.</p>
      </header>
      <div class="text-white mt-16">
        <div class="md:border-l md:pl-6 md:border-slate-700/40">
          <div class="flex max-w-3xl flex-col space-y-16">
            {page.data.map((post) => <Card url={post.url} title={post.frontmatter.title} excerpt={post.frontmatter.excerpt} postDate={post.frontmatter.date} />)}
          </div>
        </div>
        <nav class="flex items-center justify-between py-3 sm:px-6 mt-16 sm:mt-8" aria-label="Pagination">
          <div class="hidden sm:block">
            <p class="text-sm text-slate-400">
              Showing
              <span class="font-medium">{page.start + 1}</span>
              to
              <span class="font-medium">{page.end + 1}</span>
              of
              <span class="font-medium">{page.total}</span>
              posts
            </p>
          </div>
          <div class="flex flex-1 justify-between sm:justify-end">
            {
              page.url.prev ? (
                <a href={page.url.prev} class="relative inline-flex items-center rounded-md text-sm font-medium text-teal-500 hover:text-teal-300 sm:px-4 sm:py-2 sm:hover:bg-slate-700/50">
                  Previous
                </a>
              ) : (
                ''
              )
            }
            {
              page.url.next ? (
                <a href={page.url.next} class="relative inline-flex items-center rounded-md text-sm font-medium text-teal-500 hover:text-teal-300 sm:px-4 sm:py-2 sm:hover:bg-slate-700/50">
                  Next
                </a>
              ) : (
                ''
              )
            }
          </div>
        </nav>
      </div>
    </main>
  </div>
</Layout>
